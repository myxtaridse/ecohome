import React from 'react'
import Arrow from '../components/Arrow'
import Category from '../components/Sorted/Category'
import Price from '../components/Sorted/Price'
import Brand from '../components/Sorted/Brand'
import Material from '../components/Sorted/Material'
import Color from '../components/Sorted/Color'
import { useAppDispatch } from '../redux/store'
import { fetchGoods } from '../redux/goodsSlice/asyncActions'
import { useSelector } from 'react-redux'
import { selectGoods } from '../redux/goodsSlice/selectorGoods'
import GoodSection from '../components/GoodSection/GoodSection'
import { Link } from 'react-router-dom'

const character = [
    {
        id: 1,
        title: 'Категория',
        component: <Category />
    },
    {
        id: 2,
        title: 'Цена',
        component: <Price />
    },
    {
        id: 3,
        title: 'Бренд',
        component: <Brand />
    },
    {
        id: 4,
        title: 'Материал',
        component: <Material />
    },
    {
        id: 5,
        title: 'Цвет',
        component: <Color />
    }
]

const ListGoodsLayout = () => {
    const dispatch = useAppDispatch()
  
    React.useEffect(() => {
        if (dispatch) {
        dispatch(fetchGoods())
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [])

  const {goods} = useSelector(selectGoods);
  return (
    <>
      <div className='myFavorite-head'>
            <div className='cart-title-main'>
                <div>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M2 12H4V21H2V12ZM5 14H7V21H5V14ZM16 8H18V21H16V8ZM19 10H21V21H19V10ZM9 2H11V21H9V2ZM12 4H14V21H12V4Z"></path>
                    </svg>
                </div>
                <h1>Акции</h1>
            </div>
            <div className='listGoods-sort-flex'>
                <div className='listGoods-sort-icon'>
                    <svg viewBox="0 0 50 50" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M44.8545 33.9188L37.0423 41.73C37.0404 41.7319 37.0384 41.7334 37.0365 41.7352C37.0018 41.7695 36.9656 41.8023 36.9279 41.8334C36.9098 41.8482 36.8906 41.8612 36.872 41.8751C36.8498 41.8917 36.828 41.909 36.805 41.9245C36.7828 41.9392 36.7599 41.952 36.7373 41.9655C36.7163 41.9781 36.6955 41.9913 36.6739 42.003C36.6509 42.0153 36.6271 42.0257 36.6037 42.0369C36.5809 42.0475 36.5585 42.0589 36.5352 42.0685C36.5125 42.078 36.4892 42.0856 36.466 42.0939C36.4412 42.1028 36.4164 42.1124 36.3909 42.1202C36.3678 42.1272 36.3444 42.1322 36.3211 42.1381C36.2949 42.1447 36.2692 42.152 36.2427 42.1573C36.2156 42.1627 36.1883 42.1658 36.161 42.1697C36.1379 42.173 36.1151 42.1774 36.0916 42.1797C36.0404 42.1848 35.989 42.1875 35.9375 42.1875C35.886 42.1875 35.8346 42.1848 35.7833 42.1797C35.7601 42.1774 35.7376 42.1731 35.7147 42.1698C35.6872 42.1659 35.6596 42.1627 35.6322 42.1572C35.606 42.152 35.5806 42.1448 35.5549 42.1384C35.5312 42.1324 35.5073 42.1273 35.4839 42.1201C35.4587 42.1125 35.4345 42.103 35.4099 42.0943C35.3865 42.0859 35.3627 42.078 35.3395 42.0685C35.3167 42.0591 35.295 42.048 35.2728 42.0375C35.2488 42.0262 35.2245 42.0155 35.2008 42.0028C35.1799 41.9916 35.1601 41.9789 35.1398 41.9669C35.1164 41.9528 35.0926 41.9395 35.0697 41.9242C35.0477 41.9095 35.0271 41.8931 35.0059 41.8774C34.9862 41.8627 34.9661 41.8489 34.9468 41.8331C34.9127 41.8051 34.8802 41.7751 34.8485 41.7443C34.8434 41.7393 34.8377 41.735 34.8327 41.73L27.0202 33.9175C26.7271 33.6245 26.5625 33.227 26.5625 32.8126C26.5625 32.3981 26.7271 32.0007 27.0202 31.7077C27.3131 31.4146 27.7106 31.25 28.125 31.25C28.5395 31.2499 28.9369 31.4146 29.2299 31.7076L34.375 36.8528V21.8751C34.375 21.4606 34.5396 21.0632 34.8327 20.7702C35.1257 20.4772 35.5231 20.3126 35.9375 20.3126C36.3519 20.3126 36.7493 20.4772 37.0423 20.7702C37.3354 21.0632 37.5 21.4606 37.5 21.8751V36.8533L42.6451 31.7089C42.9381 31.4159 43.3355 31.2513 43.7499 31.2514C44.1643 31.2514 44.5617 31.4161 44.8548 31.7091C45.1477 32.0022 45.3123 32.3996 45.3123 32.814C45.3123 33.2284 45.1476 33.6258 44.8545 33.9188ZM23.4373 23.4375H9.375C8.96063 23.4375 8.5632 23.6022 8.27016 23.8952C7.97711 24.1882 7.8125 24.5856 7.8125 25C7.8125 25.4145 7.97711 25.8119 8.27016 26.1049C8.5632 26.3979 8.96063 26.5625 9.375 26.5625H23.4373C23.8517 26.5625 24.2491 26.3979 24.5422 26.1049C24.8352 25.8119 24.9998 25.4145 24.9998 25C24.9998 24.5856 24.8352 24.1882 24.5422 23.8952C24.2491 23.6022 23.8517 23.4375 23.4373 23.4375ZM9.375 14.0625H35.9373C36.3517 14.0625 36.7491 13.8979 37.0422 13.6049C37.3352 13.3119 37.4998 12.9145 37.4998 12.5C37.4998 12.0856 37.3352 11.6882 37.0422 11.3952C36.7491 11.1022 36.3517 10.9375 35.9373 10.9375H9.375C8.96063 10.9375 8.5632 11.1022 8.27016 11.3952C7.97711 11.6882 7.8125 12.0856 7.8125 12.5C7.8125 12.9145 7.97711 13.3119 8.27016 13.6049C8.5632 13.8979 8.96063 14.0625 9.375 14.0625ZM20.3125 35.9375H9.375C8.96063 35.9375 8.5632 36.1022 8.27016 36.3952C7.97711 36.6882 7.8125 37.0856 7.8125 37.5C7.8125 37.9145 7.97711 38.3119 8.27016 38.6049C8.5632 38.8979 8.96063 39.0625 9.375 39.0625H20.3125C20.7269 39.0625 21.1243 38.8979 21.4173 38.6049C21.7104 38.3119 21.875 37.9145 21.875 37.5C21.875 37.0856 21.7104 36.6882 21.4173 36.3952C21.1243 36.1022 20.7269 35.9375 20.3125 35.9375Z" fill="#565656"/>
                    </svg>
                </div>
                <div className='listGoods-sort-icon'>
                    <svg viewBox="0 0 42 42" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.7987 31.5C11.5194 29.4609 13.4641 28 15.75 28C18.0359 28 19.9806 29.4609 20.7013 31.5H38.5V35H20.7013C19.9806 37.0391 18.0359 38.5 15.75 38.5C13.4641 38.5 11.5194 37.0391 10.7987 35H3.5V31.5H10.7987ZM21.2987 19.25C22.0194 17.2109 23.9641 15.75 26.25 15.75C28.5359 15.75 30.4806 17.2109 31.2013 19.25H38.5V22.75H31.2013C30.4806 24.7891 28.5359 26.25 26.25 26.25C23.9641 26.25 22.0194 24.7891 21.2987 22.75H3.5V19.25H21.2987ZM10.7987 7C11.5194 4.96092 13.4641 3.5 15.75 3.5C18.0359 3.5 19.9806 4.96092 20.7013 7H38.5V10.5H20.7013C19.9806 12.5391 18.0359 14 15.75 14C13.4641 14 11.5194 12.5391 10.7987 10.5H3.5V7H10.7987ZM15.75 10.5C16.7165 10.5 17.5 9.71649 17.5 8.75C17.5 7.78351 16.7165 7 15.75 7C14.7835 7 14 7.78351 14 8.75C14 9.71649 14.7835 10.5 15.75 10.5ZM26.25 22.75C27.2165 22.75 28 21.9665 28 21C28 20.0335 27.2165 19.25 26.25 19.25C25.2835 19.25 24.5 20.0335 24.5 21C24.5 21.9665 25.2835 22.75 26.25 22.75ZM15.75 35C16.7165 35 17.5 34.2165 17.5 33.25C17.5 32.2835 16.7165 31.5 15.75 31.5C14.7835 31.5 14 32.2835 14 33.25C14 34.2165 14.7835 35 15.75 35Z" fill="#565656"/>
                    </svg>
                </div>
                {
                    character.map((item) => (
                        <div className='listGoods-sort-character'>
                            <h6>{item.title}</h6>
                            <Arrow />
                        </div>
                    ))
                }
            </div>
      </div>
      <div className="mainGoods-list">
        {goods.map((item) => (
          
           <Link to={`/item/${item.article}`}>
               <GoodSection {...item} />
           </Link>
          
        ))}
      </div>

      {/* {
        windowRef > 500 && <div className='myFavorite-filter'>
        <h3>Цена, руб.</h3>
        <div className='myFavorite-filter-input'>
          <input placeholder={`от ${minPrice}`} value={minPrice ? `от ${0}` : ''} />
          <input placeholder={`до ${maxPrice}`} value={maxPrice ? `от ${0}` : ''} />
        </div>
        <SliderPrice />
        
      </div>
      } */}
      {/* <Outlet /> */}
    </>
  )
}

export default ListGoodsLayout