import React from 'react'
import { CustomContextMain } from '../context/MainContext';
import Arrow from '../components/Arrow';
import { reqProduct } from '../api/fetchProducts';
import ComparisonGoods from '../components/UserStorage/Comparison/ComparisonGoods';
import goodsReserv from '../../db.json';

const sortList = [
  {
    id: '0',
    title: 'цене',
  },
  {
    id: '1',
    title: 'цене',
  },
  {
    id: '2',
    title: 'наименованию',
  },
  {
    id: '3',
    title: 'наименованию',
  },
  {
    id: '4',
    title: 'популярности',
  },
  {
    id: '5',
    title: 'популярности',
  },
]

const Comparison = () => {
  const [isSelector, setIsSelector] = React.useState(false);
  const [isSelectAll, setIsSelectAll] = React.useState(false);
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const [characterAll, setCharacterAll] = React.useState<any>(['Артикул']);
  const widthSelector = React.useRef<HTMLDivElement>(null);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const {setPathValue, pathFavorite}: any = React.useContext(CustomContextMain);
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const [goods, setGoods] = React.useState<any>();
  const [categories, setCategories] = React.useState<string[]>()

  React.useEffect(() => {
    if (pathFavorite && pathFavorite.includes('/goods/')) {
      const path = pathFavorite.split('/goods/').join(" ");
    
      setPathValue(['Главная', path, 'Сравнение товаров'])
    } else {
      setPathValue(['Главная', 'Сравнение товаров'])
    }
  }, [setPathValue, pathFavorite]);

  React.useEffect(() => {
    console.log(setIsSelectAll);
    
      reqProduct().then((data) => {
        if (data) {
            setGoods(data);

            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            const categoriesAll = data.flatMap((itemData: any) => itemData.categoryChildren);
            const newCategories: string[] = Array.from(new Set(categoriesAll));
            if (newCategories) {
              setCategories(newCategories)
            }
        }
      }).catch((err) => {
        console.log(err)
        setGoods(goodsReserv.goods)
      })
  }, [])

  React.useEffect(() => {
    if (goods) {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      const getParameter = goods.flatMap((itemGood: any) => itemGood.parameter || []).map((parameterGood: any) => {
        if (parameterGood.titleParameter !== 'Вес с упаковкой (кг)' && parameterGood.titleParameter !== 'Высота предмета' && parameterGood.titleParameter !== 'Ширина предмета' && parameterGood.titleParameter !== 'Глубина предмета') {
        return parameterGood.titleParameter;
        }
      }).filter((itemFilter: string) => itemFilter !== undefined);
      
      
      setCharacterAll(Array.from(new Set(getParameter)))
      
    }
  }, [goods]);

  
  
  

  return (
    <div>
      <div className='comparison'>
      <div className='myFavorite-head'>
      <div className='cart-title'>
        <div>
        <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
            >
              <path d="M2 12H4V21H2V12ZM5 14H7V21H5V14ZM16 8H18V21H16V8ZM19 10H21V21H19V10ZM9 2H11V21H9V2ZM12 4H14V21H12V4Z"></path>
            </svg>
        </div>
        <h1>Сравнение товаров</h1>
      </div>
        <div className='myFavorite-head-flex'>
          
          <div className="myFavorite-sort">
            <p className='myFavorite-sort-title'>Категория:</p>
            <div className="comparison-sort-selector" 
            ref={widthSelector}
            onClick={() => setIsSelector(!isSelector)}
              onMouseMove={() => setIsSelector(true)}  
            >
              <p>{categories ? categories[0] : 'Не выбрана'}</p>
              <div>
                <Arrow />
              </div>
            </div>
            {
              isSelector && 
              <div 
              style={{width: widthSelector.current ? `${widthSelector.current.clientWidth + 1}px` : 'max-content'}}
              className='comparison-sort-selector-popup' onMouseLeave={() => setIsSelector(false)}  >
                {
                  categories?.map((categoriesItem) => <p>{categoriesItem}</p>)
                }
              </div>
            }
          </div>
          
        </div>
      </div>

      

      <div className='myFavorite-goods comparison-goods'>
        <div className='comparison-goods-sorted'>
          <div className="cart-main-delete-block comparison-delete-block">
              
              <div className="cart-main-delete">
                  <div>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M4 8H20V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V8ZM6 10V20H18V10H6ZM9 12H11V18H9V12ZM13 12H15V18H13V12ZM7 5V3C7 2.44772 7.44772 2 8 2H16C16.5523 2 17 2.44772 17 3V5H22V7H2V5H7ZM9 4V5H15V4H9Z"></path></svg>
                  </div>
                  <p>Удалить список</p>
              </div>
          </div>
          <div className='comparison-goods-sorted-block'>
                  <div className='comparison-goods-sorted-block-select'>
                    <p>Сортировать по:</p>
                    <div className='comparison-goods-sorted-block-select-item comparison-select-item-hover'>
                      <div>
                      <svg viewBox="0 0 64 64" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                        <path d="M57.4138 43.4141L47.4141 53.4124C47.4117 53.4148 47.4091 53.4167 47.4067 53.4191C47.3623 53.463 47.316 53.5049 47.2677 53.5447C47.2445 53.5637 47.22 53.5803 47.1962 53.5981C47.1677 53.6194 47.1399 53.6415 47.1104 53.6613C47.082 53.6802 47.0527 53.6965 47.0237 53.7139C46.9968 53.73 46.9703 53.7469 46.9426 53.7618C46.9131 53.7776 46.8827 53.7909 46.8527 53.8052C46.8235 53.8188 46.7949 53.8334 46.7651 53.8457C46.736 53.8578 46.7062 53.8676 46.6765 53.8782C46.6447 53.8896 46.613 53.9019 46.5804 53.9119C46.5508 53.9208 46.5208 53.9272 46.491 53.9348C46.4575 53.9432 46.4246 53.9526 46.3906 53.9594C46.356 53.9662 46.321 53.9702 46.2861 53.9752C46.2565 53.9795 46.2273 53.9851 46.1973 53.988C46.1317 53.9945 46.0659 53.998 46 53.998C45.9341 53.998 45.8683 53.9945 45.8026 53.988C45.7729 53.9851 45.7441 53.9796 45.7148 53.9753C45.6796 53.9703 45.6443 53.9662 45.6092 53.9592C45.5757 53.9526 45.5432 53.9434 45.5103 53.9351C45.4799 53.9275 45.4493 53.9209 45.4194 53.9117C45.3872 53.902 45.3562 53.8899 45.3247 53.8787C45.2947 53.8679 45.2643 53.8579 45.2346 53.8457C45.2054 53.8336 45.1776 53.8195 45.1492 53.806C45.1184 53.7915 45.0873 53.7778 45.057 53.7616C45.0303 53.7473 45.0049 53.731 44.979 53.7156C44.949 53.6976 44.9185 53.6805 44.8892 53.661C44.8611 53.6422 44.8347 53.6212 44.8076 53.6011C44.7823 53.5823 44.7566 53.5646 44.7319 53.5444C44.6882 53.5085 44.6466 53.4701 44.6061 53.4307C44.5995 53.4243 44.5923 53.4188 44.5858 53.4124L34.5858 43.4124C34.2107 43.0373 34 42.5285 34 41.9981C34 41.4676 34.2107 40.9589 34.5858 40.5838C34.9608 40.2087 35.4696 39.998 36 39.998C36.5305 39.9979 37.0392 40.2087 37.4143 40.5837L44 47.1696V27.9981C44 27.4676 44.2107 26.9589 44.5858 26.5838C44.9609 26.2088 45.4696 25.9981 46 25.9981C46.5304 25.9981 47.0391 26.2088 47.4142 26.5838C47.7893 26.9589 48 27.4676 48 27.9981V47.1702L54.5857 40.5854C54.9608 40.2104 55.4695 39.9997 55.9999 39.9998C56.5303 39.9998 57.039 40.2106 57.4141 40.5857C57.7891 40.9608 57.9998 41.4695 57.9997 41.9999C57.9997 42.5303 57.7889 43.039 57.4138 43.4141ZM29.9998 29.998H12C11.4696 29.998 10.9609 30.2088 10.5858 30.5838C10.2107 30.9589 10 31.4676 10 31.998C10 32.5285 10.2107 33.0372 10.5858 33.4123C10.9609 33.7873 11.4696 33.998 12 33.998H29.9998C30.5302 33.998 31.0389 33.7873 31.414 33.4123C31.789 33.0372 31.9998 32.5285 31.9998 31.998C31.9998 31.4676 31.789 30.9589 31.414 30.5838C31.0389 30.2088 30.5302 29.998 29.9998 29.998ZM12 17.998H45.9997C46.5302 17.998 47.0389 17.7873 47.414 17.4123C47.789 17.0372 47.9997 16.5285 47.9997 15.998C47.9997 15.4676 47.789 14.9589 47.414 14.5838C47.0389 14.2088 46.5302 13.998 45.9997 13.998H12C11.4696 13.998 10.9609 14.2088 10.5858 14.5838C10.2107 14.9589 10 15.4676 10 15.998C10 16.5285 10.2107 17.0372 10.5858 17.4123C10.9609 17.7873 11.4696 17.998 12 17.998ZM26 45.998H12C11.4696 45.998 10.9609 46.2088 10.5858 46.5838C10.2107 46.9589 10 47.4676 10 47.998C10 48.5285 10.2107 49.0372 10.5858 49.4123C10.9609 49.7873 11.4696 49.998 12 49.998H26C26.5304 49.998 27.0391 49.7873 27.4142 49.4123C27.7893 49.0372 28 48.5285 28 47.998C28 47.4676 27.7893 46.9589 27.4142 46.5838C27.0391 46.2088 26.5304 45.998 26 45.998Z"/>
                      </svg>
                    </div>
                    <p>цене</p>
                    </div>
          </div>
            {
              isSelectAll && (
                <div className='comparison-goods-sorted-popup'>
                  {
                  sortList && sortList.map((itemSort) => (
                    <div key={itemSort.id} className='comparison-goods-sorted-block-select-item'>
                      <div>
                        {
                          Number(itemSort.id) % 2 === 0 ? (
                          <svg viewBox="0 0 64 64" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path d="M57.4138 43.4141L47.4141 53.4124C47.4117 53.4148 47.4091 53.4167 47.4067 53.4191C47.3623 53.463 47.316 53.5049 47.2677 53.5447C47.2445 53.5637 47.22 53.5803 47.1962 53.5981C47.1677 53.6194 47.1399 53.6415 47.1104 53.6613C47.082 53.6802 47.0527 53.6965 47.0237 53.7139C46.9968 53.73 46.9703 53.7469 46.9426 53.7618C46.9131 53.7776 46.8827 53.7909 46.8527 53.8052C46.8235 53.8188 46.7949 53.8334 46.7651 53.8457C46.736 53.8578 46.7062 53.8676 46.6765 53.8782C46.6447 53.8896 46.613 53.9019 46.5804 53.9119C46.5508 53.9208 46.5208 53.9272 46.491 53.9348C46.4575 53.9432 46.4246 53.9526 46.3906 53.9594C46.356 53.9662 46.321 53.9702 46.2861 53.9752C46.2565 53.9795 46.2273 53.9851 46.1973 53.988C46.1317 53.9945 46.0659 53.998 46 53.998C45.9341 53.998 45.8683 53.9945 45.8026 53.988C45.7729 53.9851 45.7441 53.9796 45.7148 53.9753C45.6796 53.9703 45.6443 53.9662 45.6092 53.9592C45.5757 53.9526 45.5432 53.9434 45.5103 53.9351C45.4799 53.9275 45.4493 53.9209 45.4194 53.9117C45.3872 53.902 45.3562 53.8899 45.3247 53.8787C45.2947 53.8679 45.2643 53.8579 45.2346 53.8457C45.2054 53.8336 45.1776 53.8195 45.1492 53.806C45.1184 53.7915 45.0873 53.7778 45.057 53.7616C45.0303 53.7473 45.0049 53.731 44.979 53.7156C44.949 53.6976 44.9185 53.6805 44.8892 53.661C44.8611 53.6422 44.8347 53.6212 44.8076 53.6011C44.7823 53.5823 44.7566 53.5646 44.7319 53.5444C44.6882 53.5085 44.6466 53.4701 44.6061 53.4307C44.5995 53.4243 44.5923 53.4188 44.5858 53.4124L34.5858 43.4124C34.2107 43.0373 34 42.5285 34 41.9981C34 41.4676 34.2107 40.9589 34.5858 40.5838C34.9608 40.2087 35.4696 39.998 36 39.998C36.5305 39.9979 37.0392 40.2087 37.4143 40.5837L44 47.1696V27.9981C44 27.4676 44.2107 26.9589 44.5858 26.5838C44.9609 26.2088 45.4696 25.9981 46 25.9981C46.5304 25.9981 47.0391 26.2088 47.4142 26.5838C47.7893 26.9589 48 27.4676 48 27.9981V47.1702L54.5857 40.5854C54.9608 40.2104 55.4695 39.9997 55.9999 39.9998C56.5303 39.9998 57.039 40.2106 57.4141 40.5857C57.7891 40.9608 57.9998 41.4695 57.9997 41.9999C57.9997 42.5303 57.7889 43.039 57.4138 43.4141ZM29.9998 29.998H12C11.4696 29.998 10.9609 30.2088 10.5858 30.5838C10.2107 30.9589 10 31.4676 10 31.998C10 32.5285 10.2107 33.0372 10.5858 33.4123C10.9609 33.7873 11.4696 33.998 12 33.998H29.9998C30.5302 33.998 31.0389 33.7873 31.414 33.4123C31.789 33.0372 31.9998 32.5285 31.9998 31.998C31.9998 31.4676 31.789 30.9589 31.414 30.5838C31.0389 30.2088 30.5302 29.998 29.9998 29.998ZM12 17.998H45.9997C46.5302 17.998 47.0389 17.7873 47.414 17.4123C47.789 17.0372 47.9997 16.5285 47.9997 15.998C47.9997 15.4676 47.789 14.9589 47.414 14.5838C47.0389 14.2088 46.5302 13.998 45.9997 13.998H12C11.4696 13.998 10.9609 14.2088 10.5858 14.5838C10.2107 14.9589 10 15.4676 10 15.998C10 16.5285 10.2107 17.0372 10.5858 17.4123C10.9609 17.7873 11.4696 17.998 12 17.998ZM26 45.998H12C11.4696 45.998 10.9609 46.2088 10.5858 46.5838C10.2107 46.9589 10 47.4676 10 47.998C10 48.5285 10.2107 49.0372 10.5858 49.4123C10.9609 49.7873 11.4696 49.998 12 49.998H26C26.5304 49.998 27.0391 49.7873 27.4142 49.4123C27.7893 49.0372 28 48.5285 28 47.998C28 47.4676 27.7893 46.9589 27.4142 46.5838C27.0391 46.2088 26.5304 45.998 26 45.998Z"/>
                          </svg>) : (
                            <svg viewBox="0 0 64 64" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path d="M57.4138 20.5859L47.4141 10.5876C47.4117 10.5852 47.4091 10.5833 47.4067 10.5809C47.3623 10.537 47.316 10.4951 47.2677 10.4553C47.2445 10.4363 47.22 10.4197 47.1962 10.4019C47.1677 10.3806 47.1399 10.3585 47.1104 10.3387C47.082 10.3198 47.0527 10.3035 47.0237 10.2861C46.9968 10.27 46.9703 10.2531 46.9426 10.2382C46.9131 10.2224 46.8827 10.2091 46.8527 10.1948C46.8235 10.1812 46.7949 10.1666 46.7651 10.1543C46.736 10.1422 46.7062 10.1324 46.6765 10.1218C46.6447 10.1104 46.613 10.0981 46.5804 10.0881C46.5508 10.0792 46.5208 10.0728 46.491 10.0652C46.4575 10.0568 46.4246 10.0474 46.3906 10.0406C46.356 10.0338 46.321 10.0298 46.2861 10.0248C46.2565 10.0205 46.2273 10.0149 46.1973 10.012C46.1317 10.0055 46.0659 10.002 46 10.002C45.9341 10.002 45.8683 10.0055 45.8026 10.012C45.7729 10.0149 45.7441 10.0204 45.7148 10.0247C45.6796 10.0297 45.6443 10.0338 45.6092 10.0408C45.5757 10.0474 45.5432 10.0566 45.5103 10.0649C45.4799 10.0725 45.4493 10.0791 45.4194 10.0883C45.3872 10.098 45.3562 10.1101 45.3247 10.1213C45.2947 10.1321 45.2643 10.1421 45.2346 10.1543C45.2054 10.1664 45.1776 10.1805 45.1492 10.194C45.1184 10.2085 45.0873 10.2222 45.057 10.2384C45.0303 10.2527 45.0049 10.269 44.979 10.2844C44.949 10.3024 44.9185 10.3195 44.8892 10.339C44.8611 10.3578 44.8347 10.3788 44.8076 10.3989C44.7823 10.4177 44.7566 10.4354 44.7319 10.4556C44.6882 10.4915 44.6466 10.5299 44.6061 10.5693C44.5995 10.5757 44.5923 10.5812 44.5858 10.5876L34.5858 20.5876C34.2107 20.9627 34 21.4715 34 22.0019C34 22.5324 34.2107 23.0411 34.5858 23.4162C34.9608 23.7913 35.4696 24.002 36 24.002C36.5305 24.0021 37.0392 23.7913 37.4143 23.4163L44 16.8304V36.0019C44 36.5324 44.2107 37.0411 44.5858 37.4162C44.9609 37.7912 45.4696 38.0019 46 38.0019C46.5304 38.0019 47.0391 37.7912 47.4142 37.4162C47.7893 37.0411 48 36.5324 48 36.0019V16.8298L54.5857 23.4146C54.9608 23.7896 55.4695 24.0003 55.9999 24.0002C56.5303 24.0002 57.039 23.7894 57.4141 23.4143C57.7891 23.0392 57.9998 22.5305 57.9997 22.0001C57.9997 21.4697 57.7889 20.961 57.4138 20.5859ZM29.9998 34.002H12C11.4696 34.002 10.9609 33.7912 10.5858 33.4162C10.2107 33.0411 10 32.5324 10 32.002C10 31.4715 10.2107 30.9628 10.5858 30.5877C10.9609 30.2127 11.4696 30.002 12 30.002H29.9998C30.5302 30.002 31.0389 30.2127 31.414 30.5877C31.789 30.9628 31.9998 31.4715 31.9998 32.002C31.9998 32.5324 31.789 33.0411 31.414 33.4162C31.0389 33.7912 30.5302 34.002 29.9998 34.002ZM12 46.002H45.9997C46.5302 46.002 47.0389 46.2127 47.414 46.5877C47.789 46.9628 47.9997 47.4715 47.9997 48.002C47.9997 48.5324 47.789 49.0411 47.414 49.4162C47.0389 49.7912 46.5302 50.002 45.9997 50.002H12C11.4696 50.002 10.9609 49.7912 10.5858 49.4162C10.2107 49.0411 10 48.5324 10 48.002C10 47.4715 10.2107 46.9628 10.5858 46.5877C10.9609 46.2127 11.4696 46.002 12 46.002ZM26 18.002H12C11.4696 18.002 10.9609 17.7912 10.5858 17.4162C10.2107 17.0411 10 16.5324 10 16.002C10 15.4715 10.2107 14.9628 10.5858 14.5877C10.9609 14.2127 11.4696 14.002 12 14.002H26C26.5304 14.002 27.0391 14.2127 27.4142 14.5877C27.7893 14.9628 28 15.4715 28 16.002C28 16.5324 27.7893 17.0411 27.4142 17.4162C27.0391 17.7912 26.5304 18.002 26 18.002Z"/>
                            </svg>
                            
                          )
                        }
                        
                       

                      </div>
                      <p>{itemSort.title}</p>
                    </div>
                  ))
                  }
                  
                </div>
              )
            }
          </div>
        </div>
        {
          
          goods && goods.length ? <ComparisonGoods goods={goods} characterAll={characterAll}  /> : 
          <div className='myFavorite-goods-notFound comparison-goods-notFound'>
            <div className='myFavorite-goods-notFound-flex'>
            <p>Ничего не найдено</p>
            <div>
              <svg viewBox="0 0 48 48" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" strokeWidth="0"></g><g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fillRule="evenodd" clipRule="evenodd" d="M24 42C33.9411 42 42 33.9411 42 24C42 14.0589 33.9411 6 24 6C14.0589 6 6 14.0589 6 24C6 33.9411 14.0589 42 24 42ZM24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z"></path> <path d="M19 20C19 21.1046 18.1046 22 17 22C15.8954 22 15 21.1046 15 20C15 18.8954 15.8954 18 17 18C18.1046 18 19 18.8954 19 20Z"></path> <path d="M33 20C33 21.1046 32.1046 22 31 22C29.8954 22 29 21.1046 29 20C29 18.8954 29.8954 18 31 18C32.1046 18 33 18.8954 33 20Z"></path> <path fillRule="evenodd" clipRule="evenodd" d="M18.5673 33.8235L18.5691 33.8223L18.5872 33.8101C18.6045 33.7986 18.6323 33.7803 18.6699 33.7563C18.7451 33.7082 18.8591 33.6371 19.0069 33.5507C19.303 33.3775 19.7307 33.1448 20.2485 32.9122C21.2987 32.4403 22.6508 32 24 32C25.3491 32 26.7012 32.4403 27.7514 32.9122C28.2693 33.1448 28.6969 33.3775 28.9931 33.5507C29.1408 33.6371 29.2549 33.7082 29.33 33.7563C29.3676 33.7803 29.3954 33.7986 29.4127 33.8101L29.4308 33.8223L29.4327 33.8235C29.4325 33.8234 29.4328 33.8236 29.4327 33.8235M29.4327 33.8235C29.4329 33.8237 29.4335 33.8241 29.4338 33.8243C29.8885 34.1366 30.5104 34.0217 30.8235 33.5673C31.1368 33.1125 31.0221 32.4898 30.5673 32.1765L30.0333 32.9516C30.5673 32.1765 30.5675 32.1766 30.5673 32.1765L30.5651 32.175L30.5619 32.1728L30.5523 32.1663L30.5205 32.1449C30.4938 32.1272 30.4562 32.1025 30.4083 32.0718C30.3126 32.0106 30.1757 31.9254 30.0028 31.8243C29.6578 31.6225 29.1662 31.3552 28.5711 31.0878C27.3955 30.5597 25.7476 30 24 30C22.2523 30 20.6045 30.5597 19.4289 31.0878C18.8338 31.3552 18.3421 31.6225 17.9971 31.8243C17.8243 31.9254 17.6873 32.0106 17.5916 32.0718C17.5438 32.1025 17.5062 32.1272 17.4795 32.1449L17.4476 32.1663L17.438 32.1728L17.4348 32.175L17.4336 32.1758C17.4334 32.176 17.4327 32.1765 18 33L17.4327 32.1765C16.9779 32.4898 16.8631 33.1125 17.1765 33.5673C17.4897 34.022 18.1125 34.1365 18.5673 33.8235"></path> </g></svg>
            </div>
            </div>
            <button>Перейти в каталог 
              <div>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M16.0037 9.41421L7.39712 18.0208L5.98291 16.6066L14.5895 8H7.00373V6H18.0037V17H16.0037V9.41421Z"></path></svg>
              </div>
            </button>
          </div>
        }
       
      </div>

    
    </div>
    </div>
  )
}

export default Comparison